// Load stored messages from localStorage if available
var messages = JSON.parse(localStorage.getItem('messages')) || [];
var adminIp = 'admin-ip-here'; // Replace this with the admin's IP address or any condition for admin access

function showPasswordForm() {
    document.getElementById('passwordForm').style.display = 'block';
    document.getElementById('messagesSection').style.display = 'none';
}

function checkPassword() {
    var password = document.getElementById('password').value;
    if (password === '846972') {
        document.getElementById('messagesSection').style.display = 'block';
        document.getElementById('passwordForm').style.display = 'none';
        displayMessages();
    } else {
        alert('Incorrect password. Try again!');
    }
}

// Function to get the user's IP address using a third-party service
async function getIpAddress() {
    try {
        const response = await fetch('https://api.ipify.org?format=json');
        const data = await response.json();
        return data.ip;
    } catch (error) {
        console.error('Error fetching IP address:', error);
        return 'Unknown';
    }
}

document.getElementById('contactForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    var name = document.getElementById('name').value;
    var email = document.getElementById('email').value;
    var message = document.getElementById('message').value;
    
    // Get the user's IP address
    var ip = await getIpAddress();
    
    // Add the message with IP to the messages array
    messages.push({ name: name, email: email, message: message, ip: ip });
    
    // Save the messages in localStorage
    localStorage.setItem('messages', JSON.stringify(messages));
    
    // Clear the form
    document.getElementById('contactForm').reset();

    // Optionally, show a thank you message to the user
    alert('Message sent! Thank you for contacting us.');

    // If Admin is logged in, update the messages
    if (document.getElementById('messagesSection').style.display === 'block') {
        displayMessages();
    }
});

// Function to display messages for the admin only
function displayMessages() {
    var messagesContainer = document.getElementById('messagesContainer');
    messagesContainer.innerHTML = ''; // Clear the previous messages

    // Check if the user's IP matches the admin's IP or if the password is entered
    if (isAdmin()) {
        // Loop through the messages and display them
        messages.forEach(function(message, index) {
            var messageDiv = document.createElement('div');
            messageDiv.innerHTML = 
                `<p><strong>Name:</strong> ${message.name}</p>
                <p><strong>Email:</strong> ${message.email}</p>
                <p><strong>Message:</strong> ${message.message}</p>
                <p><strong>IP Address:</strong> ${message.ip}</p>
                <button class="delete-btn" onclick="deleteMessage(${index})">Delete</button>
                <hr>`;
            messagesContainer.appendChild(messageDiv);
        });
    } else {
        messagesContainer.innerHTML = '<p>You do not have permission to view messages.</p>';
    }
}

// Function to check if the user is the admin
async function isAdmin() {
    const ip = await getIpAddress();
    return ip === adminIp;  // Check if the user's IP matches the admin IP
}

function deleteMessage(index) {
    // Remove the message from the array
    messages.splice(index, 1);

    // Save the updated messages in localStorage
    localStorage.setItem('messages', JSON.stringify(messages));

    // Update the displayed messages
    displayMessages();
}
